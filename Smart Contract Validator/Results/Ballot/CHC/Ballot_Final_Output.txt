Counterexample:
chairperson = 0x0, proposals = []
i = 0

Transaction trace:
Ballot.constructor(proposalNames){ msg.sender: 0x0 }
  --> Results/Ballot/CHC/Ballot_mod.sol:21:2:
   |
21 | 	assert(!( i < proposalNames.length));
   | 	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Warning: CHC: Assertion violation happens here.
Counterexample:
chairperson = 0x0, proposals = []
voter = 0x0

Transaction trace:
Ballot.constructor([]){ msg.sender: 0x0 }
State: chairperson = 0x0, proposals = []
Ballot.giveRightToVote(0x0){ msg.sender: 0x0 }
  --> Results/Ballot/CHC/Ballot_mod.sol:30:2:
   |
30 | 	assert(!(            msg.sender == chairperson));
   | 	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Warning: CHC: Assertion violation happens here.
Counterexample:
chairperson = 0x1e28, proposals = []
voter = 0x0

Transaction trace:
Ballot.constructor([]){ msg.sender: 0x1e28 }
State: chairperson = 0x1e28, proposals = []
Ballot.giveRightToVote(0x0){ msg.sender: 0x1e27 }
  --> Results/Ballot/CHC/Ballot_mod.sol:31:2:
   |
31 | 	assert(!(!(            msg.sender == chairperson)));
   | 	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Warning: CHC: Assertion violation happens here.
Counterexample:
chairperson = 0x1e28, proposals = []
voter = 0x0

Transaction trace:
Ballot.constructor([]){ msg.sender: 0x1e28 }
State: chairperson = 0x1e28, proposals = []
Ballot.giveRightToVote(0x0){ msg.sender: 0x1e28 }
  --> Results/Ballot/CHC/Ballot_mod.sol:36:2:
   |
36 | 	assert(!(            !voters[voter].voted));
   | 	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Warning: CHC: Assertion violation happens here.
  --> Results/Ballot/CHC/Ballot_mod.sol:37:2:
   |
37 | 	assert(!(!(            !voters[voter].voted)));
   | 	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Warning: CHC: Assertion violation happens here.
Counterexample:
chairperson = 0x0, proposals = []
voter = 0x1e28

Transaction trace:
Ballot.constructor([]){ msg.sender: 0x0 }
State: chairperson = 0x0, proposals = []
Ballot.giveRightToVote(0x1e28){ msg.sender: 0x0 }
  --> Results/Ballot/CHC/Ballot_mod.sol:42:2:
   |
42 | 	assert(!(voters[voter].weight == 0));
   | 	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Warning: CHC: Assertion violation happens here.
Counterexample:
chairperson = 0x0, proposals = []
voter = 0x0

Transaction trace:
Ballot.constructor([]){ msg.sender: 0x0 }
State: chairperson = 0x0, proposals = []
Ballot.giveRightToVote(0x0){ msg.sender: 0x0 }
  --> Results/Ballot/CHC/Ballot_mod.sol:43:2:
   |
43 | 	assert(!(!(voters[voter].weight == 0)));
   | 	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Warning: CHC: Assertion violation happens here.
Counterexample:
chairperson = 0x1e28, proposals = []
to = 0x0
sender = {weight: 0, voted: false, delegate: 0x0, vote: 0}
delegate_ = {weight: 0, voted: false, delegate: 0x0, vote: 0}

Transaction trace:
Ballot.constructor([]){ msg.sender: 0x1e28 }
State: chairperson = 0x1e28, proposals = []
Ballot.delegate(0x0){ msg.sender: 0x1e27 }
  --> Results/Ballot/CHC/Ballot_mod.sol:49:2:
   |
49 | 	assert(!(!sender.voted));
   | 	^^^^^^^^^^^^^^^^^^^^^^^^

Warning: CHC: Assertion violation happens here.
  --> Results/Ballot/CHC/Ballot_mod.sol:50:2:
   |
50 | 	assert(!(!(!sender.voted)));
   | 	^^^^^^^^^^^^^^^^^^^^^^^^^^^

Warning: CHC: Assertion violation happens here.
Counterexample:
chairperson = 0x1e29, proposals = []
to = 0x0
sender = {weight: 0, voted: false, delegate: 0x0, vote: 0}
delegate_ = {weight: 0, voted: false, delegate: 0x0, vote: 0}

Transaction trace:
Ballot.constructor([]){ msg.sender: 0x1e29 }
State: chairperson = 0x1e29, proposals = []
Ballot.delegate(0x0){ msg.sender: 0x1e28 }
  --> Results/Ballot/CHC/Ballot_mod.sol:52:2:
   |
52 | 	assert(!(to != msg.sender));
   | 	^^^^^^^^^^^^^^^^^^^^^^^^^^^

Warning: CHC: Assertion violation happens here.
Counterexample:
chairperson = 0x1e28, proposals = []
to = 0x0
sender = {weight: 0, voted: false, delegate: 0x0, vote: 0}
delegate_ = {weight: 0, voted: false, delegate: 0x0, vote: 0}

Transaction trace:
Ballot.constructor([]){ msg.sender: 0x1e28 }
State: chairperson = 0x1e28, proposals = []
Ballot.delegate(0x0){ msg.sender: 0x0 }
  --> Results/Ballot/CHC/Ballot_mod.sol:53:2:
   |
53 | 	assert(!(!(to != msg.sender)));
   | 	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Warning: CHC: Assertion violation might happen here.
  --> Results/Ballot/CHC/Ballot_mod.sol:56:2:
   |
56 | 	assert(!(voters[to].delegate != address(0)));
   | 	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Warning: CHC: Assertion violation might happen here.
  --> Results/Ballot/CHC/Ballot_mod.sol:59:2:
   |
59 | 	assert(!(to != msg.sender));
   | 	^^^^^^^^^^^^^^^^^^^^^^^^^^^

Warning: CHC: Assertion violation might happen here.
  --> Results/Ballot/CHC/Ballot_mod.sol:60:2:
   |
60 | 	assert(!(!(to != msg.sender)));
   | 	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Warning: CHC: Assertion violation happens here.
Counterexample:
chairperson = 0x1e29, proposals = []
to = 0x1e28
sender = {weight: 0, voted: true, delegate: 0x1e28, vote: 0}
delegate_ = {weight: 11, voted: true, delegate: 0x0a, vote: 9}

Transaction trace:
Ballot.constructor([]){ msg.sender: 0x1e29 }
State: chairperson = 0x1e29, proposals = []
Ballot.delegate(0x1e28){ msg.sender: 0x1e27 }
  --> Results/Ballot/CHC/Ballot_mod.sol:66:2:
   |
66 | 	assert(!(delegate_.voted));
   | 	^^^^^^^^^^^^^^^^^^^^^^^^^^

Warning: CHC: Assertion violation happens here.
Counterexample:
chairperson = 0xffffffffffffffffffffffffffffffffffffe1d8, proposals = []
to = 0x0
sender = {weight: 0, voted: true, delegate: 0x0, vote: 0}
delegate_ = {weight: 11, voted: false, delegate: 0x0a, vote: 9}

Transaction trace:
Ballot.constructor([]){ msg.sender: 0xffffffffffffffffffffffffffffffffffffe1d8 }
State: chairperson = 0xffffffffffffffffffffffffffffffffffffe1d8, proposals = []
Ballot.delegate(0x0){ msg.sender: 0xffffffffffffffffffffffffffffffffffffe1d7 }
  --> Results/Ballot/CHC/Ballot_mod.sol:67:2:
   |
67 | 	assert(!(!(delegate_.voted)));
   | 	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Warning: CHC: Assertion violation happens here.
Counterexample:
chairperson = 0x0, proposals = []
proposal = 0
sender = {weight: 1, voted: false, delegate: 0x0, vote: 0}

Transaction trace:
Ballot.constructor([]){ msg.sender: 0x0 }
State: chairperson = 0x0, proposals = []
Ballot.vote(0){ msg.sender: 0x0 }
  --> Results/Ballot/CHC/Ballot_mod.sol:76:2:
   |
76 | 	assert(!(sender.weight != 0));
   | 	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Warning: CHC: Assertion violation happens here.
Counterexample:
chairperson = 0x0, proposals = []
proposal = 0
sender = {weight: 0, voted: false, delegate: 0x0, vote: 0}

Transaction trace:
Ballot.constructor([]){ msg.sender: 0x0 }
State: chairperson = 0x0, proposals = []
Ballot.vote(0){ msg.sender: 0x1e28 }
  --> Results/Ballot/CHC/Ballot_mod.sol:77:2:
   |
77 | 	assert(!(!(sender.weight != 0)));
   | 	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Warning: CHC: Assertion violation happens here.
Counterexample:
chairperson = 0x0, proposals = []
proposal = 0
sender = {weight: 1, voted: false, delegate: 0x0, vote: 0}

Transaction trace:
Ballot.constructor([]){ msg.sender: 0x0 }
State: chairperson = 0x0, proposals = []
Ballot.vote(0){ msg.sender: 0x0 }
  --> Results/Ballot/CHC/Ballot_mod.sol:79:2:
   |
79 | 	assert(!(!sender.voted));
   | 	^^^^^^^^^^^^^^^^^^^^^^^^

Warning: CHC: Assertion violation happens here.
  --> Results/Ballot/CHC/Ballot_mod.sol:80:2:
   |
80 | 	assert(!(!(!sender.voted)));
   | 	^^^^^^^^^^^^^^^^^^^^^^^^^^^

Warning: CHC: Assertion violation happens here.
  --> Results/Ballot/CHC/Ballot_mod.sol:91:2:
   |
91 | 	assert(!( p < proposals.length));
   | 	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Warning: CHC: Assertion violation might happen here.
  --> Results/Ballot/CHC/Ballot_mod.sol:93:2:
   |
93 | 	assert(!(proposals[p].voteCount > winningVoteCount));
   | 	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Warning: CHC: Assertion violation happens here.
  --> Results/Ballot/CHC/Ballot_mod.sol:94:2:
   |
94 | 	assert(!(!(proposals[p].voteCount > winningVoteCount)));
   | 	^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

