	assert(!( i < proposalNames.length));
	assert(!(!( i < proposalNames.length)));
	assert(!(            msg.sender == chairperson));
	assert(!(!(            msg.sender == chairperson)));
	assert(!(            !voters[voter].voted));
	assert(!(!(            !voters[voter].voted)));
	assert(!(voters[voter].weight == 0));
	assert(!(!(voters[voter].weight == 0)));
	assert(!(!sender.voted));
	assert(!(!(!sender.voted)));
	assert(!(to != msg.sender));
	assert(!(!(to != msg.sender)));
	assert(!(voters[to].delegate != address(0)));
	assert(!(!(voters[to].delegate != address(0))));
	assert(!(to != msg.sender));
	assert(!(!(to != msg.sender)));
	assert(!(delegate_.voted));
	assert(!(!(delegate_.voted)));
	assert(!(sender.weight != 0));
	assert(!(!(sender.weight != 0)));
	assert(!(!sender.voted));
	assert(!(!(!sender.voted)));
	assert(!( p < proposals.length));
	assert(!(!( p < proposals.length)));
	assert(!(proposals[p].voteCount > winningVoteCount));
	assert(!(!(proposals[p].voteCount > winningVoteCount)));
